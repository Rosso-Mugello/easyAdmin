/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EasyAdmin;

import static EasyAdmin.AddStaff.writefile;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import javax.swing.JOptionPane;

/**
 *
 * @author 3406446
 */
public class CurrentStaff extends javax.swing.JFrame {

    RandomAccessFile raf;  // define file instance
    String FileName = ("EmployeesFile.txt");
    File inFile = new File(FileName);
    boolean checked = false;
    Employee einput; 
    Managers minput; 
    RandomAccessFile raf2;
    String File2 = ("ManagersFile.txt");
    File sndFile = new File(File2);
    String File3 = ("Record of Absence.txt");
    File record = new File(File3);
    RandomAccessFile raf3;
    boolean valid = true;

    /**
     * Creates new form CurrentStaff
     */
    public CurrentStaff() {
        initComponents();
        einput = new Employee();
        minput = new Managers();
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        if (inFile.exists() && inFile.length() != 0) {
            try {
                raf = new RandomAccessFile(inFile, "rw"); // open file
                System.out.println("File opened");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        } else {
            System.out.println("File not found.");
        }
// Open Manager profile
            if (sndFile.exists() && sndFile.length() != 0) {
                try {
                    raf2 = new RandomAccessFile(sndFile, "rw"); // open file
                    System.out.println("File opened");
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Managers profile could not be found.");
            }
// end of opening file
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Employee Number");

        jLabel2.setText("Name");

        jLabel3.setText("Gender");

        jLabel4.setText("Department");

        jLabel5.setText("Phone Number");

        jLabel6.setText("Annual Vacations Left");

        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jTextField2.setText(" ");

        jTextField6.setText(" ");

        jLabel7.setText("Type");

        jLabel8.setText("Duration");

        jLabel9.setText("Authorization");

        jTextField8.setText(" ");
        jTextField8.setEnabled(false);
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField8FocusLost(evt);
            }
        });

        jTextField9.setEnabled(false);

        jButton1.setText("Update info");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Request New Leave");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Submit Request");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Please enter Employee Number\nto enable further operations!");
        jScrollPane1.setViewportView(jTextArea1);

        jButton5.setText("Remove Employee");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Personal", "Business", "Marriage", "Pregnancy", "Annual Vacation", "Sickness" }));
        jComboBox1.setEnabled(false);

        jButton6.setText("Get Info");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Save");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));
        jComboBox2.setEnabled(false);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Manager" }));
        jComboBox4.setEnabled(false);

        jLabel10.setText("Age");

        jLabel11.setText("Salary");

        jLabel12.setText("Home Address");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administration", "Inventory", "Sales", "Storage", "Delivering", "Finance", "Quality Control" }));
        jComboBox5.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(jTextField4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton6)
                                .addGap(43, 43, 43)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(37, 37, 37)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(jButton5)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(62, 62, 62)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField9)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)
                            .addComponent(jButton4)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("current");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        String chars = "qwertyuioplkjhgfdsazxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM";
        String in = " ";
        int index;
        final int length = 112; // 111 characters plus EOFL
        if (jTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Employee Number"
                    + " to enable further operations");

        } else {
            index = Integer.parseInt(jTextField1.getText()) - 1;
            try {
                raf.seek(length * index);
                in = raf.readLine();
                for (int i = 0; i < in.length(); i++) {
                    if (chars.indexOf(in.charAt(i)) >= 0) {
                        checked = true;
                        break;
                    } else {
                        JOptionPane.showMessageDialog(null, "No record under entered employee number!");
                        break;
                    }
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if (checked) {
            loadEmployee(in);
            setInfo();
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton5.setEnabled(true);
            jTextArea1.setText("Click on buttons to proceed!");
        } else {
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
            jButton5.setEnabled(false);
            jButton7.setEnabled(false);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        String in = (jTextField1.getText());
        String ints = "1234567890";
        for (int i = 0; i < in.length(); i++) {
            if (ints.indexOf(in.charAt(i)) < 0) {
                JOptionPane.showMessageDialog(null, "Field not enterred correctly", "Warning", 1);
                break;
            }
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton5.setEnabled(false);
        if (jComboBox4.getSelectedItem().equals("Manager")) {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton5.setEnabled(true);
            jTextArea1.setText("Managers' profile is protected. "
                    + "\n Access declined!" + "\nClick on buttons to proceed!");
        } else {
            jTextField1.setEditable(false);
            jTextField2.setEditable(true);
            jTextField3.setEditable(true);
            jTextField4.setEditable(true);
            jTextField5.setEditable(true);
            jTextField7.setEditable(true);
            jTextField8.setEditable(true);
            jTextField9.setEditable(true);
            jButton7.setEnabled(true);
            jComboBox2.setEnabled(true);
            jComboBox5.setEnabled(true);
            jComboBox4.setEnabled(true);
            jTextArea1.setText("Data input activated!!!");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(jComboBox4.getSelectedItem().equals("Manager")){
            if(checkUnique(jComboBox5.getSelectedIndex(),raf2,51)){
                writeInfo(einput, raf);
                minput.changeCode(Integer.parseInt(JOptionPane.showInputDialog("Please set a code for authorizing absences!")));
                minput.changeName(einput.getName());
                minput.changePosn(einput.getPosn());
                writeInfo(minput, raf2);
                System.out.println("Manager promoted!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Not able to create manager under"
                        + " selected department \nBecause department manager exist!", "Conflict", 1);
                this.dispose();
            }
        }
        else{
            //System.out.println("Is "+ einput.getIfManager());  
        writeInfo(einput, raf);
        }
        jTextArea1.setText("Data Saved");
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        jButton7.setEnabled(false);
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField7.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        
        jTextField8.setText("");
        jTextField9.setText("");
        jButton1.setEnabled(false);
        jTextField1.setEditable(true);
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (jComboBox4.getSelectedItem().equals("Manager")) {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton5.setEnabled(true);
            jTextArea1.setText("Managers' profile is protected. "
                    + "\n Access declined!" + "\nRefer to other options.");
        } else {
            int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Confirm Deletion of " + einput.getName() + ".");
            if (showConfirmDialog == 0) {
                final int length = 112; // 111 characters plus EOFL
                int count = einput.getENUM() - 1;
                String ten = "          ";
                try {
                    raf.seek(count * length);
                    raf.writeBytes(ten + ten + ten + ten + ten + ten + ten + ten + ten + ten + ten + " ");
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                jTextArea1.setText("Selected employee deleted from file.");
                jTextField2.setEditable(false);
                jTextField3.setEditable(false);
                jTextField4.setEditable(false);
                jTextField5.setEditable(false);
                jTextField7.setEditable(false);
                jTextField8.setEditable(false);
                jTextField9.setEditable(false);
                jButton7.setEnabled(false);
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField7.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jTextField6.setText("");
                jTextField8.setText("");
                jTextField9.setText("");
                jButton1.setEnabled(false);
                jButton5.setEnabled(false);
                jTextField1.setEditable(true);
                if (record.exists() && record.length() != 0) {
                    try {
                        raf3 = new RandomAccessFile(record, "rw"); // open file
                        System.out.println("File opened");
                        for (int d=0;d<5;d++){
                        raf3.seek(((einput.getENUM()-1)*6+d)*71);
                        raf3.writeBytes(ten+ten+ten+ten+ten+ten+ten);
                        String type="";
                        if(d==0){
                            type = "Personal";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        else if(d==1){
                            type="Business";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        else if(d==2){
                            type="Marriage";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        else if(d==3){
                            type="Pregnancy";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        else if(d==4){
                            type="Annual Vacation";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        else {
                            type="Sickness";
                            raf3.seek(((einput.getENUM()-1)*6+d)*71);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 25);
                            raf3.writeBytes(type);//Corresponding Type
                            raf3.seek(((einput.getENUM()-1)*6+d)*71+ 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                            
                    }
                    }
                    catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
                // refresh the interface
               
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Disabling all other buttons
        jButton1.setEnabled(false);
        jButton3.setEnabled(true);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        //Activate related text fields
        jComboBox1.setEnabled(true);
        jTextField8.setEnabled(true);
        jTextField9.setEnabled(true);
        jTextField8.setEditable(true);
        jTextField9.setEditable(true);
        jTextArea1.setText("Click Submit Request after \ncorrectly entering required field");


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        valid=true;
        if (jTextField8.getText().isEmpty()) {
            valid = false;
            JOptionPane.showMessageDialog(null,"Blank input found!");
        }
        if (jTextField9.getText().isEmpty()) {
            valid = false;
            JOptionPane.showMessageDialog(null,"Blank input found!");
        }
        if(jComboBox1.getSelectedItem().equals("Annual Vacation"))
                {
            if(Integer.parseInt(noSpace(jTextField6.getText()))<Integer.parseInt(noSpace(jTextField8.getText()))){
                        JOptionPane.showMessageDialog(null,"Vacation Days are not enough!");
                        valid=false;
                    }
            
            ;
        }
        if (valid) {
            
            // Get input
            Absence leave = new Absence();
            String code = "";
            code = noSpace(jTextField9.getText());
            leave.loadInfo(einput.getName(), einput.getENUM(),
                    jComboBox1.getSelectedItem().toString(),
                    Double.parseDouble(noSpace(jTextField8.getText())), einput.getPosn());
            String authorization = getAuthorization(jComboBox5.getSelectedIndex(), raf2);
            if (code.equalsIgnoreCase(authorization)) {
                final int recL = 71;//70+1
                int count;
                leave.setState(true);
                jTextArea1.setText(leave.getState());
                //write into record file
                //check record file
                if (record.exists() && record.length() != 0) {
                    try {
                        raf3 = new RandomAccessFile(record, "rw"); // open file
                        System.out.println("File opened");
                        // all good, write new instance to record
                         System.out.println("Type- "+leave.getType());
                        if (leave.getType().equalsIgnoreCase("Personal")) {
                            count = 0;
                        } else if (leave.getType().equalsIgnoreCase("Business")) {
                            count = 1;
                        } else if (leave.getType().equalsIgnoreCase("Marriage")) {
                            count = 2;
                        } else if (leave.getType().equalsIgnoreCase("Pregnancy")) {
                            count = 3;
                        } else if (leave.getType().equalsIgnoreCase("Annual Vacation")) {
                            count = 4;
                            int change=einput.GetDays();
                            change-=leave.getLength();
                            raf.seek(112 * (leave.getId()-1) + 47);
                            raf.writeBytes("   ");//wipes the original record
                            if(change<10&&change>=0){
                                raf.seek(112 * (leave.getId()-1) + 48);
                                raf.writeBytes(Integer.toString(change));
                            }
                            else if(change>=10&&change<15){
                                raf.seek(112 * (leave.getId()-1) + 47);
                                raf.writeBytes(Integer.toString(change));
                            }
                           
                        } else {
                            count = 5;
                        }
                        System.out.println("Index is "+count);
                        double sum;
                        String input;
                        //writing in
                        raf3.seek(((leave.getId() - 1)*6 + count) * recL);
                        //System.out.println("Fetching "+(leave.getId()-1+count)*recL);
                        raf3.writeBytes(leave.getName());
                        raf3.seek(((leave.getId() - 1)*6 + count) * recL + 20);
                        raf3.writeBytes(Integer.toString(leave.getId()));
                        raf3.seek(((leave.getId() - 1)*6 + count) * recL + 45);
                        input = noSpace(raf3.readLine()).substring(0, 4);
                        System.out.println("Reads" + input);
                        sum = Double.parseDouble(input);
                        sum += leave.getLength();
                        System.out.println("Total time changed to " + sum);
                        raf3.seek(((leave.getId() - 1)*6 + count) * recL + 45);
                        raf3.writeBytes(Double.toString(sum));
                        raf3.seek(((leave.getId() - 1)*6 + count) * recL + 50);
                        raf3.writeBytes(leave.getDepartment());
                        
                        // new data entrance written
                        jTextArea1.setText("Record updated.");
                        jTextField2.setEditable(false);
                        jTextField3.setEditable(false);
                        jTextField4.setEditable(false);
                        jTextField5.setEditable(false);
                        jTextField7.setEditable(false);
                        jTextField8.setText("");
                        jTextField9.setText("");
                        jTextField8.setEditable(false);
                        jTextField9.setEditable(false);
                        jButton7.setEnabled(false);
                        jComboBox1.setEnabled(false);
                        jButton1.setEnabled(false);
                        jButton5.setEnabled(false);
                        jButton3.setEnabled(false);
                        jButton6.setEnabled(true);
                        jTextField1.setEditable(true);
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                } else {// exception when file is not found
                    JOptionPane.showMessageDialog(null, "Record file could not be found, creating a blank file");
                    String ten = "          ";
                    String fields[] = new String[1500];
                    for (int i = 0; i < fields.length; i++) {
                        fields[i] = ten + ten + ten + ten + ten + ten + ten;//70 spaces
                    }
                    writefile(fields, File3);
                    JOptionPane.showMessageDialog(null, "Blank file created");
                    //create a file if not created before for first data entrance.
                    // write in default values
                    try {
                        raf3 = new RandomAccessFile(record, "rw"); // open file
                        System.out.println("File opened");
                        for (int i = 0; i < 1200; i += 6) {
                            raf3.seek(i * recL + 20);
                            // raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(i * recL + 25);
                            raf3.writeBytes("Personal");//Corresponding Type
                            raf3.seek(i * recL + 45);
                            raf3.writeBytes("0.00");//default time in days
                        }
                        // 
                        for (int j = 1; j < 1201; j += 6) {
                            raf3.seek(j * recL + 20);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(j * recL + 25);
                            raf3.writeBytes("Business");//Corresponding Type
                            raf3.seek(j * recL + 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        //
                        for (int h = 2; h < 1202; h += 6) {
                            raf3.seek(h * recL + 20);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(h * recL + 25);
                            raf3.writeBytes("Marriage");//Corresponding Type
                            raf3.seek(h * recL + 45);
                            raf3.writeBytes("0.00");//default time in days
                        }
                        //
                        for (int k = 3; k < 1203; k += 6) {
                            raf3.seek(k * recL + 20);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(k * recL + 25);
                            raf3.writeBytes("Pregnancy");//Corresponding Type
                            raf3.seek(k * recL + 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        //
                        for (int l = 4; l < 1204; l += 6) {
                            raf3.seek(l * recL + 20);
                            //raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(l * recL + 25);
                            raf3.writeBytes("Annual Vacation");//Corresponding Type
                            raf3.seek(l * recL + 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        //
                        for (int m = 5; m < 1205; m += 6) {
                            raf3.seek(m * recL + 20);
                            // raf3.writeBytes(Integer.toString(c));//Corresponding eNUM
                            raf3.seek(m * recL + 25);
                            raf3.writeBytes("Sickness");//Corresponding Type
                            raf3.seek(m * recL + 45);
                            raf3.writeBytes("0.00");//default time in days 
                        }
                        // default values written to file.
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            } else {
                jTextArea1.setText("Not satisfied, check authorization code");
                jTextField9.setText("");
            }
        } else {
            jTextArea1.setText("Please ensure all \ninformation is entered correctly\n"
                    + "Then re-submit.");
            valid=true;
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusLost
        // TODO add your handling code here:
        if (noSpace(jTextField8.getText()).length() > 4) {
            JOptionPane.showMessageDialog(null, "Only 2 decimals are allowed!", "Warning", 1);
           //jTextField8.setText("");
    }//GEN-LAST:event_jTextField8FocusLost
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrentStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrentStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrentStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrentStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrentStaff().setVisible(true);
            }
        });
    }
    public boolean checkUnique(int temp, RandomAccessFile raf,final int length){
         boolean unique = false;
         String in="";
        try{
            raf.seek(temp*length);
            in=raf.readLine();
            System.out.println("Checking"+ in);
        }
        catch(IOException ex) {
            ex.printStackTrace();
        }  
       String anything = "1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM";// no space
        for (int i = 0; i < in.length(); i++) {
            if (anything.indexOf(in.charAt(i)) >= 0) {
                System.out.println(i);
            unique=false;
            break;
        } 
            else{
                unique=true;
                break;
            }
        }
        
        return unique;
    }
    public void loadEmployee(String in) {
        einput.changeAge(Integer.parseInt(noSpace(in.substring(20, 22))));
        einput.changeAddress(noSpace(in.substring(50, 70)));
        einput.changePhone(noSpace(in.substring(35, 47)));
        einput.updateVacation(Integer.parseInt(noSpace(in.substring(47, 50))));
        einput.changePosn(noSpace(in.substring(70, 85)));
        einput.changeSal(Double.parseDouble(noSpace(in.substring(25, 35))));
        einput.changeName(noSpace(in.substring(0, 20)));
        einput.changeENum(Integer.parseInt(noSpace(in.substring(85, 90))));
        einput.changeGender(noSpace(in.substring(90, 100)));
        if (noSpace(in.substring(100, 111)).equalsIgnoreCase("Manager")) {
            einput.ifManager(true);
        } else {
            einput.ifManager(false);
        }
        //System.out.println(einput.getAll());
    }

    public void setInfo() {
        jTextField2.setText(einput.getName());  //name
        jTextField3.setText(Double.toString(einput.getSal()));  //sal
        jTextField4.setText(einput.getAddress());  //address
        jTextField5.setText(einput.getPhone());  //phone
        jTextField6.setText(Integer.toString(einput.GetDays()));  //vacation
        jTextField7.setText(Integer.toString(einput.getAge()));  //age        
        jComboBox4.setSelectedItem(einput.getIfManager());
        jComboBox2.setSelectedItem(einput.getGender());
        jComboBox5.setSelectedItem(einput.getPosn());
    }

    public String noSpace(String temp) {
        String out = "";
        String space = " ";
        for (int i = 0; i < temp.length(); i++) {
            if (temp.charAt(i) == space.charAt(0)) {
            } else {
                out += temp.charAt(i);
            }
        }
        return out;
    }

    public void writeInfo(Employee temp, RandomAccessFile raf) {
        final int length = 112; // 111 characters plus EOFL
        int count = temp.getENUM() - 1;
        String ten = "          ";
        try {
            //wipes the original record
            raf.seek(count * length);
            raf.writeBytes(ten + ten + ten + ten + ten + ten + ten + ten + ten + ten + ten + " ");
            // write data input to the match field in the employee file.
            raf.seek(count * length);
            raf.writeBytes(jTextField2.getText());
            raf.seek(count * length + 20);
            raf.writeBytes(jTextField7.getText());
            raf.seek(count * length + 25);
            raf.writeBytes(jTextField3.getText());
            raf.seek(count * length + 35);
            raf.writeBytes(jTextField5.getText());
            raf.seek(count*length+47);
            raf.writeBytes(jTextField6.getText());
            raf.seek(count * length + 50);
            raf.writeBytes(jTextField4.getText());
            raf.seek(count * length + 70);
            raf.writeBytes(jComboBox5.getSelectedItem().toString());
            raf.seek(count * length + 85);
            raf.writeBytes(Integer.toString(temp.getENUM()));
            raf.seek(count * length + 90);
            raf.writeBytes(jComboBox2.getSelectedItem().toString());
            raf.seek(count * length + 100);
            raf.writeBytes(jComboBox4.getSelectedItem().toString());
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    public void writeInfo(Managers temp, RandomAccessFile raf) {
        final int length = 51; // 50 characters plus EOFL  
        int count = jComboBox5.getSelectedIndex();
        try {
            raf.seek(count * length);
            raf.writeBytes(temp.getName());
            raf.seek(count * length + 20);
            raf.writeBytes(temp.getPosn());
            raf.seek(count * length + 35);
            raf.writeBytes(Integer.toString(temp.getCode()));
            
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    public String getAuthorization(int temp, RandomAccessFile raf) {
        String out = "";
        String in = "";
        final int length = 51; // 50 characters plus EOFL  
        try {
            raf.seek(temp * length);
            in = raf.readLine();
            System.out.println("Manager reached " + in);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        out = noSpace(in.substring(35, 50));
        return out;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
